name: Ubuntu .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      env:
        UNIT_TEST_API_KEY: ${{ secrets.UNIT_TEST_API_KEY }}
      run: dotnet test --configuration Release --no-restore --verbosity normal
  sonarqube:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
    - name: Install dependencies
      run: dotnet restore
    - name: Install coverlet.msbuild
      run: dotnet add "./Kartrider.API.Tests/Kartrider.API.Tests.csproj" package coverlet.msbuild
    - name: Install sonarscanner
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Sonarscanner begin
      run: dotnet sonarscanner begin /k:kartrider.api.net /d:sonar.host.url=${{ secrets.SONAR_HOST_URL }} /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs" /d:sonar.cs.vstest.reportsPaths="**/*.trx"
    - name: Sonarscanner Test
      env:
        UNIT_TEST_API_KEY: ${{ secrets.UNIT_TEST_API_KEY }}
      run: dotnet test --configuration Release --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx
    - name: Sonarscanner end
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
